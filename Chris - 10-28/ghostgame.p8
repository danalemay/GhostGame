pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--variables

function _init()
  player={
    sp=1,
    x=59,
    y=59,
    w=8,
    h=8,
    flp=false,
    dx=0,
    dy=0,
    max_dx=2,
    max_dy=3,
    acc=0.5,
    boost=4,
    anim=1,
    invis_time=3,
    running=false,
    jumping=false,
    falling=false,
    sliding=false,
    landed=false,
    floating=false,
    invisible=false,
   
  } 
  gravity=0.3
  friction=0.85

  --simple camera
  cam_x=0
  cam_y=0

  --map limits
  map_start=0
  map_end=1024
end
-->8
--update and draw

function _update()
  player_update()
  player_animate()

  --camera
  cam_x=player.x-64+(player.w/2)
  if cam_x<map_start then
     cam_x=map_start
  end
  if cam_x>map_end-128 then
     cam_x=map_end-128
  end
  
  cam_y=player.y-64+(player.h/2)
  if cam_y<map_start then
     cam_y=map_start
  end
  if cam_y>map_end-128 then
     cam_y=map_end-128
  end
  
  camera(cam_x,cam_y)
end

function _draw()
  cls()
  map(0,0)
  spr(player.sp,player.x,player.y,1,1,player.flp)
end
-->8
--init local time when game starts
local last_time=time()

--player
function player_update()
  --physics
  player.dy+=gravity
  player.dx*=friction
  
  --local time and dt
  local t = time()
  local dt = t-last_time
  last_time = t
  
  --invis timer
  if player.invisible then
     player.invis_time+=dt
     if player.invisible and player.invis_time>5 then
       player.invisible=false
     end
  end
  --controls
  if btn(⬅️) then
    player.dx-=player.acc
    player.running=true
    player.flp=true
  end
  if btn(➡️) then
    player.dx+=player.acc
    player.running=true
    player.flp=false
  end

  --slide
  if player.running
  and not btn(⬅️)
  and not btn(➡️)
  and not player.falling
  and not player.jumping then
    player.running=false
    player.sliding=true
  end

  --jump
  if btnp(❎)
  and player.landed then
    player.dy-=player.boost
    player.landed=false
  --floating
  end
  if btnp(❎)
  and player.falling then
   gravity=0.04
   player.floating=true
  end
  --invisibility
  if btnp(🅾️)
  and player.invisible!=true then
  player.invisible=true
  player.invis_time=0
  end
  --check collision up and down
  if player.dy>0 then
    player.falling=true
    player.landed=false
    player.jumping=false

    player.dy=limit_speed(player.dy,player.max_dy)

    if collide_map(player,"down",0) then
      player.landed=true
      player.falling=false
      player.dy=0
      player.y-=((player.y+player.h+1)%8)-1
      gravity=0.3 
    end
  elseif player.dy<0 then
    player.jumping=true
    if collide_map(player,"up",1) then
      player.dy=0
    end
  end

  --check collision left and right
  if player.dx<0 then

    player.dx=limit_speed(player.dx,player.max_dx)

    if collide_map(player,"left",1) then
      player.dx=0
    end
  elseif player.dx>0 then

    player.dx=limit_speed(player.dx,player.max_dx)

    if collide_map(player,"right",1) then
      player.dx=0
    end
  end

  --stop sliding
  if player.sliding then
    if abs(player.dx)<.2
    or player.running then
      player.dx=0
      player.sliding=false
    end
  end

  player.x+=player.dx
  player.y+=player.dy

  --limit player to map
  if player.x<map_start then
    player.x=map_start
  end
  if player.x>map_end-player.w then
    player.x=map_end-player.w
  end
end

function player_animate()
  if player.jumping and player.invisible!=true then
    player.sp=5
  elseif player.jumping and player.invisible then
    player.sp=10
 -- elseif player.falling then
 --   player.sp=8
 -- elseif player.sliding then
 --   player.sp=9
  elseif player.running and player.invisible!=true then
    if time()-player.anim>.1 then
      player.anim=time()
      player.sp+=1
      if player.sp>4 then
        player.sp=3
      end
    end
  elseif player.running and player.invisible then
    if time()-player.anim>.1 then
      player.anim=time()
      player.sp+=1
      if player.sp>9 then
        player.sp=8
      end
    end
  elseif player.invisible then
  		if time()-player.anim>.3 then
  		  player.anim=time()
  		  player.sp+=1
  		  if player.sp>7 then
  		    player.sp=6
  		  end
  		end   
  else --player idle
    if time()-player.anim>.3 then
      player.anim=time()
      player.sp+=1
      if player.sp>2 then
        player.sp=1
      end
    end
  end
end

function limit_speed(num,maximum)
  return mid(-maximum,num,maximum)
end
-->8
--collisions

function collide_map(obj,aim,flag)
 --obj = table needs x,y,w,h
 --aim = left,right,up,down

 local x=obj.x  local y=obj.y
 local w=obj.w  local h=obj.h

 local x1=0	 local y1=0
 local x2=0  local y2=0

 if aim=="left" then
   x1=x-1  y1=y
   x2=x    y2=y+h-1

 elseif aim=="right" then
   x1=x+w-1    y1=y
   x2=x+w  y2=y+h-1

 elseif aim=="up" then
   x1=x+2    y1=y-1
   x2=x+w-3  y2=y

 elseif aim=="down" then
   x1=x+2      y1=y+h
   x2=x+w-3    y2=y+h
 end

 --pixels to tiles
 x1/=8    y1/=8
 x2/=8    y2/=8

 if fget(mget(x1,y1), flag)
 or fget(mget(x1,y2), flag)
 or fget(mget(x2,y1), flag)
 or fget(mget(x2,y2), flag) then
   return true
 else
   return false
 end

end

__gfx__
00000000000770000007700000067000000670000006700000056000000560000005600000056000000560000000000000000000000000000000000000000000
00000000007777000077770000677700006777000067770000566600005666000056660000566600005666000000000000000000000000000000000000000000
00700700077777700777777006777770067777700677777005666660056666600566666005666660056666600000000000000000000000000000000000000000
00077000070770700707707006707070067070700670707005866860058668600568686005686860056868600000000000000000000000000000000000000000
00077000077777700777777006777770067777700677777005666660056666600566666005666660056666600000000000000000000000000000000000000000
00700700077777700777777006777770067777700677777005666660056666600566666005666660056666600000000000000000000000000000000000000000
00000000077777700777777006777770067777700677777005666660056666600566666005666660056666600000000000000000000000000000000000000000
00000000070770700070070006077070007007000000000005066060006006000506606000600600000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f44f4444111111111111111111111111444444444000000011111111111111111111111111111111000000000000000000000000000000000000000000000000
4f4444f411111111111111111111111144444444400000001ddddddd1ddddddd1ddddddd1ddddddd000000000000000000000000000000000000000000000000
4444f44411111111111111111111111144444444400000001ddddddd1ddddddd1ddddddd1ddddddd000000000000000000000000000000000000000000000000
444f44f411111111111111111111111144444494400000001ddddddd1ddddddd1ddddddd1ddddddd000000000000000000000000000000000000000000000000
f444444f111111111111111111111111444444444000000011111111111111111177771111111111077770000000000000000000000000000000000000000000
4f44f4441111111111111111111111114444444440000000dddd1ddddddd1dddd77007d777d7777d070070777077700000000000000000000000000000000000
44f444f40110010011111111111111114444444440000000dddd1ddddddd1dddd777777777771ddd077777777770000000000000000000000000000000000000
f4444f440000000111111111111111114444444440000000dddd1ddddddd1dddd7777dd777d7777d077700777077700000000000000000000000000000000000
00000000000000000000000000000000000000000000000011111111111111110000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000001ddddddd1ddddddd0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000001ddddddd1ddddddd0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000001ddddddd1ddddddd0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000011111111111111110000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000dddd1ddddddd1ddd0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000dddd1ddddddd1ddd0000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000dddd1ddddddd1ddd0000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4647464746474647464746474647000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5657565756575657565756575657000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4242424242414241000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4647464747004346474647464747474700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5657565757004456575657565747474700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4647464746474647465757474647000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5657565756575657564849575657000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4141414141414141414141414141414100004141414141414100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
